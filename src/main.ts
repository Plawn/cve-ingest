import { client } from "./conf.ts";

import { DataIngester } from "./index.ts";
import {
  DebugPersistorFactory,
  MongoPersistorFactory,
} from "./utils/persistor.ts";

// TODO: move this to data ingester
// const defaultStartDate = new Date("2023-02-01T01:00:00");
// const defaultEndDate = new Date("2023-02-14T13:00:00");

// for dev purposes while waiting to differential update
// await populateDB({
//   startDate: defaultStartDate,
//   endDate: defaultEndDate,
// });

// console.log(await getMissingDataChunks());

function getPersistorFactory(isDebug: boolean) {
  if (isDebug) {
    return new DebugPersistorFactory();
  } else {
    return new MongoPersistorFactory(client);
  }
}

export async function ensureDataIsUpToDate() {
  // read conf
  // create ingester
  // update all
  const dbName = "newcvedb";
  const debug = Boolean(Deno.env.get("DEBUG")) || false;
  console.log(debug);
  const persistor = getPersistorFactory(debug);
  const ingester = new DataIngester(persistor, dbName);
  await ingester.populateCPE();
  await ingester.populateCVE();
}

await ensureDataIsUpToDate();
